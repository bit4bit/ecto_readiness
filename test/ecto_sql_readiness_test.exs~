defmodule EctoSqlReadinessTest do
  use ExUnit.Case

  defmodule TestRepo do
    use Ecto.Repo, otp_app: :ecto_sql_readiness, adapter: Ecto.Adapters.SQLite3

    def init(_type, config) do
      config =
        config
        |> Keyword.put(:database, ":memory:")
        |> Keyword.put(:pool_size, 1)
        |> Keyword.put(:priv, "priv/test")

      {:ok, config}
    end
  end

  setup do
    start_supervised!(TestRepo)
    :ok
  end

  test ":ok when doesn't have pending migrations" do
    {:ok, _, _} = Ecto.Migrator.with_repo(TestRepo, &Ecto.Migrator.run(&1, :up, all: true))

    assert :ok = EctoSqlReadiness.probes([TestRepo])
  end

  test ":pending when have pending migrations" do
    assert :pending_migrations = EctoSqlReadiness.probes([TestRepo])
  end
end
